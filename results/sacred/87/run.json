{
  "artifacts": [],
  "command": "my_main",
  "experiment": {
    "base_dir": "/home/amax/lgh/LINDA/pymarl-master/src",
    "dependencies": [
      "numpy==1.24.4",
      "PyYAML==3.13",
      "sacred==0.8.6",
      "torch==2.4.1"
    ],
    "mainfile": "main.py",
    "name": "pymarl",
    "repositories": [],
    "sources": [
      [
        "main.py",
        "_sources/main_b7323ae4bfd95dceefc78ad124a4154e.py"
      ],
      [
        "run.py",
        "_sources/run_c3a9ca40c87ac2f0c25b8bb64d094943.py"
      ],
      [
        "utils/logging.py",
        "_sources/logging_17bd0d742d3652503a996eb43349da26.py"
      ]
    ]
  },
  "fail_trace": [
    "Traceback (most recent call last):\n",
    "  File \"/home/amax/anaconda3/envs/lgh_pymarl/lib/python3.8/site-packages/sacred/config/captured_function.py\", line 42, in captured_function\n    result = wrapped(*args, **kwargs)\n",
    "  File \"src/main.py\", line 35, in my_main\n    run(_run, config, _log)\n",
    "  File \"/home/amax/lgh/LINDA/pymarl-master/src/run.py\", line 48, in run\n    run_sequential(args=args, logger=logger)\n",
    "  File \"/home/amax/lgh/LINDA/pymarl-master/src/run.py\", line 179, in run_sequential\n    learner.train(episode_sample, runner.t_env, episode)\n",
    "  File \"/home/amax/lgh/LINDA/pymarl-master/src/learners/LINDA_learner.py\", line 52, in train\n    agent_outs, KL = self.mac.forward(batch, t=t)\n",
    "  File \"/home/amax/lgh/LINDA/pymarl-master/src/controllers/LINDA_controller.py\", line 31, in forward\n    agent_outs, self.hidden_states, KL = self.agent(agent_inputs, self.hidden_states)\n",
    "  File \"/home/amax/anaconda3/envs/lgh_pymarl/lib/python3.8/site-packages/torch/nn/modules/module.py\", line 1553, in _wrapped_call_impl\n    return self._call_impl(*args, **kwargs)\n",
    "  File \"/home/amax/anaconda3/envs/lgh_pymarl/lib/python3.8/site-packages/torch/nn/modules/module.py\", line 1562, in _call_impl\n    return forward_call(*args, **kwargs)\n",
    "  File \"/home/amax/lgh/LINDA/pymarl-master/src/modules/agents/LINDA_agent.py\", line 58, in forward\n    h_cat[:, id, :] = torch.cat([h_i, h_detach]).view(batch_size, 1, 2 * self.n_agents * self.args.rnn_hidden_dim)\n",
    "RuntimeError: expand(torch.cuda.FloatTensor{[32, 1, 1024]}, size=[32, 1024]): the number of sizes provided (2) must be greater or equal to the number of dimensions in the tensor (3)\n"
  ],
  "heartbeat": "2024-09-13T11:49:41.252349",
  "host": {
    "ENV": {},
    "cpu": "Intel(R) Xeon(R) Silver 4116 CPU @ 2.10GHz",
    "gpus": {
      "driver_version": "545.29.06",
      "gpus": [
        {
          "model": "NVIDIA GeForce RTX 2080 Ti",
          "persistence_mode": false,
          "total_memory": 11264
        }
      ]
    },
    "hostname": "pop-os",
    "os": [
      "Linux",
      "Linux-6.6.6-76060606-generic-x86_64-with-glibc2.17"
    ],
    "python_version": "3.8.19"
  },
  "meta": {
    "command": "my_main",
    "config_updates": {
      "env_args": {
        "map_name": "8m"
      }
    },
    "named_configs": [],
    "options": {
      "--beat-interval": null,
      "--capture": null,
      "--comment": null,
      "--debug": false,
      "--enforce_clean": false,
      "--file_storage": null,
      "--force": false,
      "--help": false,
      "--id": null,
      "--loglevel": null,
      "--mongo_db": null,
      "--name": null,
      "--pdb": false,
      "--print-config": false,
      "--priority": null,
      "--queue": false,
      "--s3": null,
      "--sql": null,
      "--tiny_db": null,
      "--unobserved": false,
      "COMMAND": null,
      "UPDATE": [
        "env_args.map_name=8m"
      ],
      "help": false,
      "with": true
    }
  },
  "resources": [],
  "result": null,
  "start_time": "2024-09-13T11:48:35.719508",
  "status": "FAILED",
  "stop_time": "2024-09-13T11:49:41.258220"
}